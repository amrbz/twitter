{"version":3,"sources":["[absolute-resource-path]"],"names":["props","onVideoReady","bind","openStream","state","currency","price","isStreaming","balance","event","console","log","setState","timeleft","ths","downloadTimer","setInterval","clearInterval","videoOpts","height","width","playerVars","autoplay","paddingTop","React","Component"],"mappings":"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","file":"3.4746102ae800d1333203.hot-update.js","sourcesContent":["import Layout from '../components/MyLayout.js';\nimport Link from 'next/link';\nimport { Row, Col, Button, Image, Jumbotron } from 'react-bootstrap';\n\nimport YouTube from 'react-youtube';\n\n\nexport default class extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.onVideoReady = this.onVideoReady.bind(this);\n    this.openStream = this.openStream.bind(this);\n    this.state = {\n      currency: 'ETH',\n      price: 0.01,\n      isStreaming: false,\n      balance: 0.05\n    };\n  }\n\n  async componentDidMount() {\n    // const res = await axios.get('http://127.0.0.1:7200/api/v1.0/issues');\n    // console.log(res);\n    // this.setState({ \n    //   issues: {\n    //     list: res.status === 204 ? [] : res.data\n    //   } \n    // });\n  }\n  // \n\n  onVideoReady(event) {\n    // event.target.pauseVideo();\n  }\n\n  openStream() {\n    console.log('open');\n    \n    this.setState({\n      isStreaming: true\n    })\n\n    const timeleft = this.state.balance / this.state.price;\n    const ths = this\n    let downloadTimer = setInterval(function() {\n      ths.setState({\n        balance: ths.state.balance - ths.state.price\n      })\n\n      if(timeleft <= 0) {\n        ths.setState({\n          isStreaming: false\n        })\n        clearInterval(downloadTimer)\n      }\n    },1000);\n  }\n\n  closeStream() {\n    this.setState({\n      isStreaming: false\n    })\n  }\n\n  render() {\n    const videoOpts = {\n      height: '400',\n      width: '90%',\n      playerVars: { // https://developers.google.com/youtube/player_parameters\n        autoplay: 1\n      }\n    }\n\n    return(\n      <Layout>\n        <Row style={{ paddingTop: 120}}>\n          <Col lg={8}>\n            {\n              this.state.isStreaming === true ? (\n                <YouTube\n                  videoId=\"7DtRPJ2crTA\"\n                  opts={videoOpts}\n                  onReady={this.onVideoReady}\n                />\n              ) : (\n                <Jumbotron>\n                  <h1>Live stream Demo</h1>\n                  <p>\n                    To be able to join video stream you have to open a payment channel.\n                  </p>\n                  <p>\n                    <Button bsStyle=\"primary\" onClick={this.openStream}>Open channel</Button>\n                  </p>\n                </Jumbotron>\n              )\n            } \n          </Col>\n          <Col lg={4}>\n\n            <h2>Balance: {this.state.balance} {this.state.currency}/sec</h2>\n            <h2>Price: {this.state.price} {this.state.currency}/sec</h2>\n            <Button \n              bsStyle=\"primary\"\n              bsSize=\"large\"\n            >\n              Add funds\n            </Button>\n          </Col>\n        </Row>\n          \n        <style jsx>{`\n          @import url('https://fonts.googleapis.com/css?family=Open+Sans:300,400,700');\n          font-family: 'Open Sans', sans-serif;\n          color: #333;\n\n          h2 {\n            font-weight: 300;\n            margin: 0 0 1em;\n          }\n          \n        `}</style>\n      </Layout>\n    )\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./pages/stream.js"],"sourceRoot":""}