{"version":3,"sources":["[absolute-resource-path]"],"names":["moment","require","props","addTweet","bind","state","userId","url","query","activeUserid","user","txPending","tweets","list","users","message","axios","all","get","then","spread","usersRes","userRes","tweetsRes","console","log","setState","data","status","req","post","response","arr","length","concat","catch","e","error","map","item","index","userName","target","value","day","unix","created","fromNow","marginRight","React","Component"],"mappings":"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","file":"3.a6a0d95bcf092e20358f.hot-update.js","sourcesContent":["// pages/about.js\n\nimport Layout from '../components/MyLayout.js'\nimport Link from 'next/link'\n\nconst moment = require('moment');\n\n// import englishLocaleData from 'react-intl/locale-data/en';\n// import { IntlProvide } from 'react-intl';\nimport axios from 'axios';\nimport { Row, Col, Modal, Button, Badge, Alert, FormGroup, FormControl, ControlLabel, Table, Panel, Glyphicon } from 'react-bootstrap';\n\nexport default class extends React.Component {\n\n    constructor(props) {\n      super(props);     \n      this.addTweet = this.addTweet.bind(this);\n      this.state = {\n        userId: props.url.query.userId,\n        activeUserid: props.url.query.userId,\n        user: false,\n        txPending: false,\n        tweets: {\n          list: false,\n        },\n        users: {\n          list: false\n        },\n        message: '',\n      };\n    }\n\n    async componentDidMount() {\n\n      axios.all([\n        axios.get(`http://127.0.0.1:7610/api/v1.0/users`, {\n        }),\n        axios.get(`http://127.0.0.1:7610/api/v1.0/users/${this.state.userId}`, {\n        }),\n        axios.get(`http://127.0.0.1:7610/api/v1.0/tweets/${this.state.userId}`, {\n        })\n      ])\n      .then(axios.spread((usersRes, userRes, tweetsRes) => {\n        console.log('usersRes', usersRes);\n        console.log('userRes', userRes);\n        console.log('tweetsRes', tweetsRes);\n        \n        this.setState({\n          user: userRes.data,\n          users: {\n            list: usersRes.status === 204 ? [] : usersRes.data\n          },\n          tweets: {\n            list: tweetsRes.status === 204 ? [] : tweetsRes.data\n          }\n        })\n\n      }));\n    }\n    \n    addTweet() {\n      this.setState({\n        txPending: true,\n      })\n      const req = axios.post('http://127.0.0.1:7610/api/v1.0/tweets', {\n        message: this.state.message,\n        userId: this.state.userId,\n      })\n      .then((response) => {\n        console.log(response);\n        if (response.status === 201) {\n          \n          const arr = this.state.tweets.list === false && this.state.tweets.length === 0 ? \n            [response.data] : [response.data].concat(this.state.tweets.list);\n          \n          this.setState({\n            tweets: {\n              list: arr\n            },\n            message: '',\n            txPending: false,\n          })\n        }\n      })\n      .catch((e) => {\n        console.error(e);\n      });\n    }\n    \n    render() {\n\n      const users = this.state.users.list === false ? 'asd' : (\n        this.state.users.list.map((item, index) => (\n          <Button>{item.userName}</Button>\n        ))\n      )\n\n      return (\n          <Layout>\n            <Row>\n              <Col lg={4}>\n                <h1>{this.state.user === false ? '-' : this.state.user.userName}</h1>\n                \n                <p>{users}</p>\n              \n              </Col>\n              <Col lg={8}>\n                <h2>Tweets</h2>\n                <FormGroup controlId=\"formInlineName\">\n                  <FormControl \n                    componentClass=\"textarea\" \n                    value={this.state.message} \n                    placeholder=\"Anything to say?\"\n                    onChange={(e) => this.setState({message: e.target.value})}\n                  />\n                </FormGroup>\n                <Button \n                  bsStyle=\"primary\" \n                  onClick={this.addTweet}\n                  disabled={this.state.txPending}\n                >\n                  Add record\n                </Button>\n                <hr />\n                {\n                  this.state.tweets.list === false ? null : \n                    this.state.tweets.list.length === 0 ? (\n                      <Alert key={`tweets_no_contetnt`}>\n                        No records\n                      </Alert>\n                    ) : (\n                      this.state.tweets.list.map((item, index) => {\n                        const day = moment.unix(item.created);\n                        return (\n                          <Panel key={`tweet_${index}`}>\n                            <Panel.Heading>Posted {day.fromNow()}</Panel.Heading>\n                            <Panel.Body>{item.message}</Panel.Body>\n                            <Panel.Footer>\n                              <span className={'glyphClass'}>\n                                <Glyphicon glyph=\"heart-empty\" />\n                              </span>\n                              <span className={'glyphClass'}>\n                                <Glyphicon glyph=\"comment\" style={{ marginRight: '5px'}} />\n                                <Badge>2</Badge>\n                              </span>\n                              \n                            </Panel.Footer>\n                          </Panel>\n                        )\n                      })\n                    )\n                    \n                }\n              </Col>\n            </Row>\n            <style jsx>{`\n              @import url('https://fonts.googleapis.com/css?family=IBM+Plex+Sans:300,400,700');\n              font-family: 'IBM Plex Sans', sans-serif;\n\n              h1 {\n                font-size: 4em;\n                font-weight: 300;\n                margin: 1.4em 0 0.4em 0;\n                display: block;\n                border-radius: 4px;\n              }\n\n              h2 {\n                font-size: 2em;\n                font-weight: 300;\n                margin: 3.4em 0 1em 0;\n              }\n\n              span.glyphClass {\n                cursor: pointer;\n                margin-right: 2em;\n              }\n            `}</style>\n          </Layout>\n      )\n    }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./pages/user.js"],"sourceRoot":""}